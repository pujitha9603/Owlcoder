#include <bits/stdc++.h>
using namespace std;

int dp[100001];
int func(int i, vector<int> &v, int n){
	if(i==n-1){
		return 0;
	}

	if(dp[i]!=-1) return dp[i];
	//recursive call
	//go with one step
	int left = abs(v[i]-v[i+1]) + func(i+1, v, n);

	// go with two steps
	int right = INT_MAX;
	if(i+2 <= n-1){
		right = abs(v[i]-v[i+2]) + func(i+2, v, n);
	}

	return dp[i] = min(left, right);
}


int main(){
	vector<int> v{10, 30, 40, 20};
	int n = v.size();
	memset(dp, -1, sizeof(dp));
	cout << func(0, v, n);
}
