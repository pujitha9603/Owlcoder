#include<bits/stdc++.h>
using namespace std;
int dp[100001];
int fun(int i, vector<int>&A, int n, int k){
    //base case
    
    if(i == n - 1)return 0;
    if(dp[i] != -1)return dp[i];
    
    //recursive call
    int ans = INT_MAX;
    for(int ind = 1; ind <= k; ind++){
        if(i + ind <= n - 1){
            // ans = min(ans, abs(A[i]) - A[i + ind]) + fun(i + ind, A, n, k)));
            ans = min(ans, abs(A[i] - A[i + ind]) + fun(i + ind, A, n, k));
        }
    }
    return dp[i] = ans;

}


int main() {
    
    vector<int> A{10, 30, 40, 50, 20};
    int n = A.size();
    int k = 3;
    memset(dp, -1, sizeof(dp));
    cout << fun(0,A,n,k);
}
